// this file was automatically generated by make_coresrv_idc.sh

int __IDC__dev_register(IDC_PTR, const char*, struct vfs_filesys *);
typedef void* dev_register_ptr;

int __IDC__dev_unregister(IDC_PTR, const char*);
typedef void* dev_unregister_ptr;

int __IDC__semaphore_create(IDC_PTR, sem_t *sem, const char* name, int oflag, mode_t mode, unsigned value);
typedef void* semaphore_create_ptr;

int __IDC__semaphore_open(IDC_PTR, sem_t *sem, const char* name, int oflag);
typedef void* semaphore_open_ptr;

int __IDC__semaphore_post(IDC_PTR, sem_t* sem);
typedef void* semaphore_post_ptr;

int __IDC__semaphore_wait(IDC_PTR, sem_t* sem);
typedef void* semaphore_wait_ptr;

int __IDC__vfs_chmod(IDC_PTR, struct vfs_file*, mode_t);
typedef void* vfs_chmod_ptr;

int __IDC__vfs_chown(IDC_PTR, struct vfs_file*, uid_t, gid_t);
typedef void* vfs_chown_ptr;

int __IDC__vfs_close(IDC_PTR, struct vfs_file*);
typedef void* vfs_close_ptr;

int __IDC__vfs_create(IDC_PTR, struct vfs_file*, int);
typedef void* vfs_create_ptr;

int __IDC__vfs_fstat(IDC_PTR, struct vfs_file*, struct stat*);
typedef void* vfs_fstat_ptr;

int __IDC__vfs_fsync(IDC_PTR, struct vfs_file*);
typedef void* vfs_fsync_ptr;

int __IDC__vfs_ftruncate(IDC_PTR, struct vfs_file*, off_t);
typedef void* vfs_ftruncate_ptr;

int __IDC__vfs_link(IDC_PTR, struct vfs_file*, struct vfs_file*);
typedef void* vfs_link_ptr;

int __IDC__vfs_mount(IDC_PTR, const char*, struct vfs_filesys *);
typedef void* vfs_mount_ptr;

int __IDC__vfs_open(IDC_PTR, struct vfs_file*, const char*, int);
typedef void* vfs_open_ptr;

int __IDC__vfs_pipe(IDC_PTR, struct vfs_file*, struct vfs_file*);
typedef void* vfs_pipe_ptr;

int __IDC__vfs_resolve(IDC_PTR, struct vfs_file*, struct vfs_file*, const char *, int);
typedef void* vfs_resolve_ptr;

int __IDC__vfs_termios(IDC_PTR, struct vfs_file*, struct termios*, int);
typedef void* vfs_termios_ptr;

int __IDC__vfs_unlink(IDC_PTR, struct vfs_file*);
typedef void* vfs_unlink_ptr;

int __IDC__vfs_unmount(IDC_PTR, const char*);
typedef void* vfs_unmount_ptr;

int __IDC__vfs_utimes(IDC_PTR, struct vfs_file*, const struct timespec*);
typedef void* vfs_utimes_ptr;

off_t __IDC__vfs_lseek(IDC_PTR, struct vfs_file*, off_t, int);
typedef void* vfs_lseek_ptr;

ssize_t __IDC__vfs_read(IDC_PTR, struct vfs_file*, void *, size_t);
typedef void* vfs_read_ptr;

ssize_t __IDC__vfs_write(IDC_PTR, struct vfs_file*, const void *, size_t);
typedef void* vfs_write_ptr;

uint64_t __IDC__rtc_ticks(IDC_PTR);
typedef void* rtc_ticks_ptr;

uint64_t __IDC__rtc_time(IDC_PTR);
typedef void* rtc_time_ptr;

void __IDC__coresrv_vga_putc(IDC_PTR, unsigned x, unsigned y, unsigned cursorx, unsigned c, unsigned color);
typedef void* coresrv_vga_putc_ptr;

void* __IDC__elf_load_process(IDC_PTR);
typedef void* elf_load_process_ptr;

void __IDC__rtc_beep(IDC_PTR, unsigned freq, unsigned ticks);
typedef void* rtc_beep_ptr;

extern uintptr_t __IDE__coresrv_vga_putc;
extern uintptr_t __IDE__dev_register;
extern uintptr_t __IDE__dev_tty_close;
extern uintptr_t __IDE__dev_tty_lseek;
extern uintptr_t __IDE__dev_tty_open;
extern uintptr_t __IDE__dev_tty_read;
extern uintptr_t __IDE__dev_tty_termios;
extern uintptr_t __IDE__dev_tty_write;
extern uintptr_t __IDE__dev_unregister;
extern uintptr_t __IDE__elf_load_process;
extern uintptr_t __IDE__rtc_beep;
extern uintptr_t __IDE__rtc_ticks;
extern uintptr_t __IDE__rtc_time;
extern uintptr_t __IDE__semaphore_create;
extern uintptr_t __IDE__semaphore_open;
extern uintptr_t __IDE__semaphore_post;
extern uintptr_t __IDE__semaphore_wait;
extern uintptr_t __IDE__vfs_devfs_close;
extern uintptr_t __IDE__vfs_devfs_lseek;
extern uintptr_t __IDE__vfs_devfs_open;
extern uintptr_t __IDE__vfs_devfs_read;
extern uintptr_t __IDE__vfs_initfs_close;
extern uintptr_t __IDE__vfs_initfs_lseek;
extern uintptr_t __IDE__vfs_initfs_open;
extern uintptr_t __IDE__vfs_initfs_read;
extern uintptr_t __IDE__vfs_mount;
extern uintptr_t __IDE__vfs_pipe;
extern uintptr_t __IDE__vfs_pipefs_close;
extern uintptr_t __IDE__vfs_pipefs_read;
extern uintptr_t __IDE__vfs_pipefs_write;
extern uintptr_t __IDE__vfs_resolve;
extern uintptr_t __IDE__vfs_rootfs_close;
extern uintptr_t __IDE__vfs_rootfs_lseek;
extern uintptr_t __IDE__vfs_rootfs_open;
extern uintptr_t __IDE__vfs_rootfs_read;
